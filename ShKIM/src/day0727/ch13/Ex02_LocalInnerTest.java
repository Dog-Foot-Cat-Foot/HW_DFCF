package day0727.ch13;

class Outer {
	
	//------------------------------------------
	// <1> 인스턴스 변수 선언
	// <2> 정적 변수 선언
	//------------------------------------------
	int outNum = 100;			// <1>
	static int sNum = 200;		// <2>
	
	//------------------------------------------
	// getRunnable(int i) 메서드 선언
	//------------------------------------------
	Runnable getRunnable(int i) {
		
		//------------------------------------------
		// 지역 변수 선언
		//------------------------------------------
		int num = 100;
		
		//------------------------------------------
		// Runnable 인터페이스를 구현한 MyRunnable 지역 내부 클래스 선언
		//------------------------------------------
		class MyRunnable implements Runnable {

			//------------------------------------------
			// 지역 내부 클래스의 인스턴스 변수
			//------------------------------------------
			int localNum = 10;
			
			//------------------------------------------
			// run() 메서드 구현
			//------------------------------------------
			@Override
			public void run() {
				
				//------------------------------------------
				// <1> 지역 변수는 상수로 바뀌므로 값을 변경할 수 없어 오류 발생
				//	Local variable num defined in an enclosing scope must be final or effectively final
				// <2> 매개변수도 지역 변수처럼 상수로 바뀌므로 값을 변경할 수 없어 오류 발생
				//	Local variable i defined in an enclosing scope must be final or effectively final
				//------------------------------------------
				// num = 200;			// <1>
				// i = 100;				// <2>
				System.out.println("i = " + i);
				System.out.println("num = " + num);
				System.out.println("localNum = " + localNum);
				System.out.println("outNum = " + outNum + "(외부 클래스 인스턴스 변수)");
				System.out.println("Outer.sNum = " + Outer.sNum + "(외부 클래스 정적 변수)");
			}
			
		}
		
		//------------------------------------------
		// 객체화하여 반환
		//------------------------------------------
		return new MyRunnable();
	}
	
}


public class Ex02_LocalInnerTest {

	public static void main(String[] args) {
		
		//------------------------------------------
		// <1> Outer형으로 out 변수 선언, Outer 인스턴스 생성하여 리턴된 메위주 대입
		// <2> Runnable형으로 runner 변수 선언, out으로 getRunnable() 메서드 호출하여 리턴된 메위주 대입
		// <3> runner으로 run() 메서드 호출
		// i = 10
		// num = 100
		// localNum = 10
		// outNum = 100(외부 클래스 인스턴스 변수)
		// Outer.sNum = 200(외부 클래스 정적 변수)
		//------------------------------------------
		Outer out = new Outer();				// <1>
		Runnable runner = out.getRunnable(10);	// <2>
		runner.run();							// <3>
		
		
		/* =========================================
		 * 지역 내부 클래스
		 * 지역 변수처럼 메서드 내부에 클래스를 정의하여 사용하는 것을 말한다.
		 * 이 클래스는 메서드 안에서만 사용할 수 있다.
		 * 
		 * 지역 내부 클래스에서 지역 변수의 유효성
		 * 지역 변수는 메서드가 호출될 때 메모리에 생성되고 메서드의 수행이 끝나면 메모리에서 사라진다.
		 * getRunnable() 메서드 호출이 끝난 후에도 run() 메서드가 정상적으로 호출된다.
		 * 즉, 지역 내부 클래스에서 사용하는 지역 변수는 상수로 처리된다.
		 * 자바 7까지는 final 예약어를 꼭 써야 했찌만, 자바 8부터는 코드를 컴파일하면 final 예약어가 자동으로 추가된다.
		 * 정리하면, 지역 내부 클래스에서 사용하는 메서드의 지역 변수는 모두 상수로 바뀐다.
		 * =========================================
		 */

	}

}
