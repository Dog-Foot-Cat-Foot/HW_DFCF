package day0720.ch09;

public class Ex02_CarTest {

	public static void main(String[] args) {
		
		//------------------------------------------
		// <1> Car형 변수 선언하여 AICar 인스턴스 생성 후 업캐스팅, 메위주 대입
		// <2> 생성된 인스턴스의 run() 메서드 호출
		// 출력
		// 시동을 켠다.
		// 자율 주행합니다.
		// 자동차가 알아서 방향을 전환합니다.
		// 스스로 멈춘다.
		// 시동을 끈다.
		//------------------------------------------
		System.out.println("=== 자율 주행하는 자동차 ===");
		Car myCar = new AICar();		// <1>
		myCar.run();					// <2>
		
		//------------------------------------------
		// Car형 변수 선언하여 ManualCar 인스턴스 생성 후 업캐스팅, 메위주 대입 
		// <2> 생성된 인스턴스의 run() 메서드 호출
		// 출력
		// 시동을 켠다.
		// 사람이 운전한다.
		// 사람이 핸들을 조작한다.
		// 브레이크로 정지한다.
		// 시동을 끈다.
		//------------------------------------------
		System.out.println("=== 사람이 운전하는 자동차 ===");
		Car hisCar = new ManualCar();	// <1>
		hisCar.run();					// <2>
		
		
		/* ==========================================
		 * 템플릿 메서드의 역할
		 * 메서드 실행 순서와 시나리오 정의하는 것이다
		 * 실행 순서(로직 흐름), 즉 시나리오를 정의한 메서드이므로 바뀔 수 없다.
		 * 그래서, 템플릿 메서드는 final 예약어를 사용해 선언한다.
		 * 로직 흐름이 이미 정해져 잇는 프레임워크에서 많이 사용하는 기본 구현 방법이다.
		 * ==========================================
		 */

	}

}
