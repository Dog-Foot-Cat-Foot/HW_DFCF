package day0720.ch10;

public interface Calc {
	
	// ------------------------------------------
	// 인터페이스에서 선언한 변수는 컴파일 과정에서 상수로 변환됨
	// ------------------------------------------
	double PI = 3.14;
	int ERROR = -99999999;
	
	// ------------------------------------------
	// 인터페이스에서 선언한 메서드는 컴파일 과정에서 추상 메서드로 변환됨
	// ------------------------------------------
	int add(int num1, int num2);
	int substract(int num1, int num2);
	int times(int num1, int num2);
	int divide(int num1, int num2);
	
	// ------------------------------------------
	// 디폴트 메서드 선언
	// <1> private 메서드 호출
	// ------------------------------------------
	default void description() {
		System.out.println("정수 계산기를 구현한다.");
		myMethod();					// <1>
	}
	
	// ------------------------------------------
	// 정적 메서드 선언
	// 정수형 배열의 매개변수 배열 요소의 데이터를 모두 더하여 리턴한다.
	// <1> private static 메서드 호출
	// ------------------------------------------
	static int total(int[] arr) {
		int total = 0;
		
		for(int i : arr) {
			total += i;
		}
		
		myStaticMethod();			// <1>
		return total;
	}
	
	// ------------------------------------------
	// private 메서드 선언
	// ------------------------------------------
	private void myMethod() {
		System.out.println("private 메서드이다.");
	}
	
	// ------------------------------------------
	// private static 메서드 선언
	// ------------------------------------------
	private static void myStaticMethod() {
		System.out.println("private static 메서드이다.");
	}
	
	
	/* =========================================
	 * 인터페이스(interface)
	 * 클래스 혹은 프로그램이 제공하는 기능을 명시적으로 선언하는 역할을 한다.
	 * 추상 메서드, 상수로 구성
	 * 
	 * 디폴트 메서드(default method)
	 * 기본으로 제공되는 메서드로,
	 * 인터페이스를 구현한 클래스가 생성되면 그 클래스에서 사용할 기본 기능이다.
	 * default 예약어를 사용하여 선언한다.
	 * 
	 * 정적 메서드
	 * static 예약어를 사용하여 선언하며 클래스 생성과 무관하게 사용할 수 있다.
	 * 
	 * private 메서드
	 * 자바 9부터 인터페이스에 private 메서드를 구현할 수 있다.
	 * 인터페이스를 구현한 클래스에서 사용하거나 재정의할 수 없다.
	 * 기존에 구현된 코드를 변경하지 않고 인터페이스를 구현한 클래스에서 공통으로 사용하는 경우에
	 * private 메서드로 구현하면 코드 재사용성을 높일 수 있다.
	 * private static 메서드는 정적 메서드에서 호출하여 사용한다.
	 * =========================================
	 */
}
